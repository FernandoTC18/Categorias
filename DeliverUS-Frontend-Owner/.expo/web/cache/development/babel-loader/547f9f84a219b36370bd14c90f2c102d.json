{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as GlobalStyles from \"../../styles/GlobalStyles\";\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport InputItem from \"../../components/InputItem\";\nimport { AuthorizationContext } from \"../../context/AuthorizationContext\";\nimport TextRegular from \"../../components/TextRegular\";\nimport logo from \"../../../assets/logo.png\";\nimport TextError from \"../../components/TextError\";\nimport { showMessage } from 'react-native-flash-message';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useContext = useContext(AuthorizationContext),\n    signIn = _useContext.signIn;\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    backendErrors = _useState2[0],\n    setBackendErrors = _useState2[1];\n  var validationSchema = yup.object().shape({\n    email: yup.string().email('Please enter a valid email').required('Email Address is Required'),\n    password: yup.string().min(3, function (_ref2) {\n      var min = _ref2.min;\n      return \"Password must be at least \" + min + \" characters\";\n    }).matches(/^\\S*$/, 'No spaces are allowed').required('Password is required')\n  });\n  var login = function login(values) {\n    setBackendErrors([]);\n    signIn(values, function (loggedInUser) {\n      loggedInUser.userType === 'owner' ? showMessage({\n        message: \"Welcome back \" + loggedInUser.firstName + \".\",\n        type: 'success',\n        style: GlobalStyles.flashStyle,\n        titleStyle: GlobalStyles.flashTextStyle\n      }) : showMessage({\n        message: \"Welcome back \" + loggedInUser.firstName + \". You are not an owner.\",\n        type: 'warning',\n        style: GlobalStyles.flashStyle,\n        titleStyle: GlobalStyles.flashTextStyle\n      });\n    }, function (error) {\n      setBackendErrors(error.errors);\n    });\n  };\n  return _jsx(Formik, {\n    validationSchema: validationSchema,\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: login,\n    children: function children(_ref3) {\n      var handleSubmit = _ref3.handleSubmit;\n      return _jsx(View, {\n        style: {\n          alignItems: 'center'\n        },\n        children: _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(Image, {\n            style: styles.image,\n            source: logo\n          }), _jsx(InputItem, {\n            name: \"email\",\n            label: \"email:\",\n            placeholder: \"owner1@owner.com\",\n            textContentType: \"emailAddress\"\n          }), _jsx(InputItem, {\n            name: \"password\",\n            label: \"password:\",\n            placeholder: \"secret\",\n            textContentType: \"password\",\n            secureTextEntry: true\n          }), backendErrors && backendErrors.map(function (error, index) {\n            return _jsxs(TextError, {\n              children: [error.param, \"-\", error.msg]\n            }, index);\n          }), _jsx(Pressable, {\n            onPress: handleSubmit,\n            style: function style(_ref4) {\n              var pressed = _ref4.pressed;\n              return [{\n                backgroundColor: pressed ? GlobalStyles.brandSuccessTap : GlobalStyles.brandSuccess\n              }, styles.button];\n            },\n            children: _jsx(TextRegular, {\n              textStyle: styles.text,\n              children: \"Sign in\"\n            })\n          }), _jsx(TextRegular, {\n            textStyle: {\n              textAlign: 'center'\n            },\n            children: \"Not a member?\"\n          }), _jsx(Pressable, {\n            onPress: function onPress() {\n              return navigation.navigate('RegisterScreen');\n            },\n            style: function style(_ref5) {\n              var pressed = _ref5.pressed;\n              return [{\n                backgroundColor: pressed ? GlobalStyles.brandGreenTap : GlobalStyles.brandGreen\n              }, styles.button];\n            },\n            children: _jsx(TextRegular, {\n              textStyle: styles.text,\n              children: \"Create account\"\n            })\n          })]\n        })\n      });\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    width: '60%'\n  },\n  image: {\n    width: 100,\n    height: 100,\n    borderColor: GlobalStyles.brandPrimary,\n    borderWidth: 1,\n    borderRadius: 50,\n    margin: 50\n  },\n  button: {\n    borderRadius: 8,\n    height: 40,\n    margin: 12,\n    padding: 10,\n    width: '100%'\n  },\n  text: {\n    fontSize: 16,\n    color: 'white',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","useContext","useState","GlobalStyles","Formik","yup","InputItem","AuthorizationContext","TextRegular","logo","TextError","showMessage","LoginScreen","navigation","signIn","backendErrors","setBackendErrors","validationSchema","object","shape","email","string","required","password","min","matches","login","values","loggedInUser","userType","message","firstName","type","style","flashStyle","titleStyle","flashTextStyle","error","errors","handleSubmit","alignItems","styles","container","image","map","index","param","msg","pressed","backgroundColor","brandSuccessTap","brandSuccess","button","text","textAlign","navigate","brandGreenTap","brandGreen","StyleSheet","create","width","height","borderColor","brandPrimary","borderWidth","borderRadius","margin","padding","fontSize","color"],"sources":["/Users/fernando/Documents/Universidad/IISSI 2/Nuevas Categorias/Simulacro-Examen/DeliverUS-Frontend-Owner/src/screens/profile/LoginScreen.js"],"sourcesContent":["import React, { useContext, useState } from 'react'\nimport { StyleSheet, View, Pressable, Image } from 'react-native'\nimport * as GlobalStyles from '../../styles/GlobalStyles'\nimport { Formik } from 'formik'\nimport * as yup from 'yup'\nimport InputItem from '../../components/InputItem'\nimport { AuthorizationContext } from '../../context/AuthorizationContext'\nimport TextRegular from '../../components/TextRegular'\nimport logo from '../../../assets/logo.png'\nimport TextError from '../../components/TextError'\nimport { showMessage } from 'react-native-flash-message'\n\nexport default function LoginScreen ({ navigation }) {\n  const { signIn } = useContext(AuthorizationContext)\n  const [backendErrors, setBackendErrors] = useState()\n  const validationSchema = yup.object().shape({\n    email: yup\n      .string()\n      .email('Please enter a valid email')\n      .required('Email Address is Required'),\n    password: yup\n      .string()\n      .min(3, ({ min }) => `Password must be at least ${min} characters`)\n      .matches(/^\\S*$/, 'No spaces are allowed')\n      .required('Password is required')\n  })\n\n  const login = (values) => {\n    setBackendErrors([])\n    signIn(values,\n      (loggedInUser) => {\n        loggedInUser.userType === 'owner'\n          ? showMessage({\n            message: `Welcome back ${loggedInUser.firstName}.`,\n            type: 'success',\n            style: GlobalStyles.flashStyle,\n            titleStyle: GlobalStyles.flashTextStyle\n          })\n          : showMessage({\n            message: `Welcome back ${loggedInUser.firstName}. You are not an owner.`,\n            type: 'warning',\n            style: GlobalStyles.flashStyle,\n            titleStyle: GlobalStyles.flashTextStyle\n          })\n      },\n      (error) => {\n        setBackendErrors(error.errors)\n      })\n  }\n\n  return (\n\n    <Formik\n      validationSchema={validationSchema}\n      initialValues={{ email: '', password: '' }}\n      onSubmit={login}>\n      {({ handleSubmit }) => (\n        <View style={{ alignItems: 'center' }}>\n          <View style={styles.container}>\n            <Image style={styles.image} source={logo} />\n            <InputItem\n              name='email'\n              label='email:'\n              placeholder='owner1@owner.com'\n              textContentType='emailAddress'\n            />\n            <InputItem\n              name='password'\n              label='password:'\n              placeholder='secret'\n              textContentType='password'\n              secureTextEntry={true}\n            />\n\n            {backendErrors &&\n              backendErrors.map((error, index) => <TextError key={index}>{error.param}-{error.msg}</TextError>)\n            }\n\n            <Pressable\n              onPress={handleSubmit}\n              style={({ pressed }) => [\n                {\n                  backgroundColor: pressed\n                    ? GlobalStyles.brandSuccessTap\n                    : GlobalStyles.brandSuccess\n                },\n                styles.button\n              ]}>\n              <TextRegular textStyle={styles.text}>\n                Sign in\n              </TextRegular>\n            </Pressable>\n\n            <TextRegular textStyle={{ textAlign: 'center' }}>Not a member?</TextRegular>\n            <Pressable\n              onPress={() => navigation.navigate('RegisterScreen')\n              }\n              style={({ pressed }) => [\n                {\n                  backgroundColor: pressed\n                    ? GlobalStyles.brandGreenTap\n                    : GlobalStyles.brandGreen\n                },\n                styles.button\n              ]}>\n              <TextRegular textStyle={styles.text}>\n                Create account\n              </TextRegular>\n            </Pressable>\n          </View>\n        </View>\n      )}\n    </Formik>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    width: '60%'\n  },\n  image: {\n    width: 100,\n    height: 100,\n    borderColor: GlobalStyles.brandPrimary,\n    borderWidth: 1,\n    borderRadius: 50,\n    margin: 50\n  },\n  button: {\n    borderRadius: 8,\n    height: 40,\n    margin: 12,\n    padding: 10,\n    width: '100%'\n  },\n  text: {\n    fontSize: 16,\n    color: 'white',\n    textAlign: 'center'\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}