{"ast":null,"code":"import { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport React, { useContext } from 'react';\nimport { AuthorizationContext } from \"../../context/AuthorizationContext\";\nimport LoginScreen from \"./LoginScreen\";\nimport ProfileScreen from \"./ProfileScreen\";\nimport RegisterScreen from \"./RegisterScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function ProfileStack() {\n  var _useContext = useContext(AuthorizationContext),\n    loggedInUser = _useContext.loggedInUser;\n  return _jsx(Stack.Navigator, {\n    children: !loggedInUser ? _jsxs(_Fragment, {\n      children: [_jsx(Stack.Screen, {\n        name: \"LoginScreen\",\n        options: {\n          title: 'Log in to access to your profile'\n        },\n        component: LoginScreen\n      }), _jsx(Stack.Screen, {\n        name: \"RegisterScreen\",\n        options: {\n          title: 'Register'\n        },\n        component: RegisterScreen\n      })]\n    }) : _jsx(Stack.Screen, {\n      name: \"ProfileScreen\",\n      options: {\n        title: 'Profile'\n      },\n      component: ProfileScreen\n    })\n  });\n}","map":{"version":3,"names":["createNativeStackNavigator","React","useContext","AuthorizationContext","LoginScreen","ProfileScreen","RegisterScreen","Stack","ProfileStack","loggedInUser","title"],"sources":["/Users/fernando/Documents/Universidad/IISSI 2/Nuevas Categorias/Simulacro-Examen/DeliverUS-Frontend-Owner/src/screens/profile/ProfileStack.js"],"sourcesContent":["import { createNativeStackNavigator } from '@react-navigation/native-stack'\nimport React, { useContext } from 'react'\nimport { AuthorizationContext } from '../../context/AuthorizationContext'\nimport LoginScreen from './LoginScreen'\nimport ProfileScreen from './ProfileScreen'\nimport RegisterScreen from './RegisterScreen'\n\nconst Stack = createNativeStackNavigator()\n\nexport default function ProfileStack () {\n  const { loggedInUser } = useContext(AuthorizationContext)\n\n  return (\n    <Stack.Navigator>\n           {!loggedInUser\n             ? (\n                <>\n                    <Stack.Screen name='LoginScreen' options={{ title: 'Log in to access to your profile' }} component={LoginScreen} />\n                    <Stack.Screen name='RegisterScreen' options={{ title: 'Register' }} component={RegisterScreen} />\n                </>\n               )\n             : (\n                    <Stack.Screen name='ProfileScreen' options={{ title: 'Profile' }} component={ProfileScreen} />\n               )\n            }\n    </Stack.Navigator>\n\n  )\n}\n"],"mappings":"AAAA,SAASA,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,oBAAoB;AAC7B,OAAOC,WAAW;AAClB,OAAOC,aAAa;AACpB,OAAOC,cAAc;AAAwB;AAAA;AAAA;AAE7C,IAAMC,KAAK,GAAGP,0BAA0B,EAAE;AAE1C,eAAe,SAASQ,YAAY,GAAI;EACtC,kBAAyBN,UAAU,CAACC,oBAAoB,CAAC;IAAjDM,YAAY,eAAZA,YAAY;EAEpB,OACE,KAAC,KAAK,CAAC,SAAS;IAAA,UACR,CAACA,YAAY,GAET;MAAA,WACI,KAAC,KAAK,CAAC,MAAM;QAAC,IAAI,EAAC,aAAa;QAAC,OAAO,EAAE;UAAEC,KAAK,EAAE;QAAmC,CAAE;QAAC,SAAS,EAAEN;MAAY,EAAG,EACnH,KAAC,KAAK,CAAC,MAAM;QAAC,IAAI,EAAC,gBAAgB;QAAC,OAAO,EAAE;UAAEM,KAAK,EAAE;QAAW,CAAE;QAAC,SAAS,EAAEJ;MAAe,EAAG;IAAA,EAClG,GAGC,KAAC,KAAK,CAAC,MAAM;MAAC,IAAI,EAAC,eAAe;MAAC,OAAO,EAAE;QAAEI,KAAK,EAAE;MAAU,CAAE;MAAC,SAAS,EAAEL;IAAc;EAC/F,EAEM;AAGtB"},"metadata":{},"sourceType":"module"}