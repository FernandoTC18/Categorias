{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport { ErrorMessage, Formik } from 'formik';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as yup from 'yup';\nimport { create } from \"../../api/RestaurantCategoryEndpoints\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function CreateCategoryScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var initialCategoryValues = {\n    name: null,\n    createdAt: null\n  };\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    backendErrors = _useState2[0],\n    setBackendErrors = _useState2[1];\n  var validationSchema = yup.object().shape({\n    name: yup.string().max(255, 'Name too long').required('Name is required')\n  });\n  var createCategory = function () {\n    var _ref2 = _asyncToGenerator(function* (values) {\n      setBackendErrors([]);\n      try {\n        var createdCategory = yield create(values);\n      } catch (err) {}\n    });\n    return function createCategory(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(Formik, {\n    children: [\"validationSchema=\", validationSchema, \"initialValues=\", initialCategoryValues, \"onSubmit=\", createCategory, function (_ref3) {\n      var handleSubmit = _ref3.handleSubmit,\n        setFieldValue = _ref3.setFieldValue,\n        values = _ref3.values;\n      return _jsx(ScrollView, {\n        children: _jsx(View, {\n          style: {\n            alignItems: 'center'\n          },\n          children: _jsx(View, {\n            style: {\n              width: '60%'\n            },\n            children: _jsx(InputItem, {\n              name: \"name\",\n              label: \"Name:\"\n            })\n          })\n        })\n      });\n    }]\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","ErrorMessage","Formik","yup","create","CreateCategoryScreen","navigation","route","initialCategoryValues","name","createdAt","backendErrors","setBackendErrors","validationSchema","object","shape","string","max","required","createCategory","values","createdCategory","err","handleSubmit","setFieldValue","alignItems","width"],"sources":["/Users/fernando/Documents/Universidad/IISSI 2/Nuevas Categorias/Simulacro-Examen/DeliverUS-Frontend-Owner/src/screens/restaurants/CreateCategoryScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { ErrorMessage, Formik } from 'formik'\nimport { ScrollView, View } from 'react-native'\nimport * as yup from 'yup'\nimport { create } from '../../api/RestaurantCategoryEndpoints'\n\nexport default function CreateCategoryScreen ({ navigation, route }) {\n  const initialCategoryValues = { name: null, createdAt: null }\n  const [backendErrors, setBackendErrors] = useState()\n\n  const validationSchema = yup.object().shape({\n    name: yup\n      .string()\n      .max(255, 'Name too long')\n      .required('Name is required')\n  })\n\n  const createCategory = async (values) => {\n    setBackendErrors([])\n    try {\n      const createdCategory = await create(values)\n    } catch (err) {\n\n    }\n  }\n\n  return (\n    <Formik>\n        validationSchema={validationSchema}\n      initialValues={initialCategoryValues}\n      onSubmit={createCategory}\n      {({ handleSubmit, setFieldValue, values }) => (\n        <ScrollView>\n          <View style={{ alignItems: 'center' }}>\n            <View style={{ width: '60%' }}>\n              <InputItem\n                name='name'\n                label='Name:'\n              />\n            </View>\n        </View>\n        </ScrollView>\n      )}\n    </Formik>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,MAAM,QAAQ,QAAQ;AAAA;AAAA;AAE7C,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,MAAM;AAA+C;AAAA;AAE9D,eAAe,SAASC,oBAAoB,OAAyB;EAAA,IAArBC,UAAU,QAAVA,UAAU;IAAEC,KAAK,QAALA,KAAK;EAC/D,IAAMC,qBAAqB,GAAG;IAAEC,IAAI,EAAE,IAAI;IAAEC,SAAS,EAAE;EAAK,CAAC;EAC7D,gBAA0CV,QAAQ,EAAE;IAAA;IAA7CW,aAAa;IAAEC,gBAAgB;EAEtC,IAAMC,gBAAgB,GAAGV,GAAG,CAACW,MAAM,EAAE,CAACC,KAAK,CAAC;IAC1CN,IAAI,EAAEN,GAAG,CACNa,MAAM,EAAE,CACRC,GAAG,CAAC,GAAG,EAAE,eAAe,CAAC,CACzBC,QAAQ,CAAC,kBAAkB;EAChC,CAAC,CAAC;EAEF,IAAMC,cAAc;IAAA,8BAAG,WAAOC,MAAM,EAAK;MACvCR,gBAAgB,CAAC,EAAE,CAAC;MACpB,IAAI;QACF,IAAMS,eAAe,SAASjB,MAAM,CAACgB,MAAM,CAAC;MAC9C,CAAC,CAAC,OAAOE,GAAG,EAAE,CAEd;IACF,CAAC;IAAA,gBAPKH,cAAc;MAAA;IAAA;EAAA,GAOnB;EAED,OACE,MAAC,MAAM;IAAA,WAAC,mBACa,EAACN,gBAAgB,EAAC,gBACvB,EAACL,qBAAqB,EAAC,WAC5B,EAACW,cAAc,EACvB;MAAA,IAAGI,YAAY,SAAZA,YAAY;QAAEC,aAAa,SAAbA,aAAa;QAAEJ,MAAM,SAANA,MAAM;MAAA,OACrC,KAAC,UAAU;QAAA,UACT,KAAC,IAAI;UAAC,KAAK,EAAE;YAAEK,UAAU,EAAE;UAAS,CAAE;UAAA,UACpC,KAAC,IAAI;YAAC,KAAK,EAAE;cAAEC,KAAK,EAAE;YAAM,CAAE;YAAA,UAC5B,KAAC,SAAS;cACR,IAAI,EAAC,MAAM;cACX,KAAK,EAAC;YAAO;UACb;QACG;MACJ,EACM;IAAA,CACd;EAAA,EACM;AAEb"},"metadata":{},"sourceType":"module"}